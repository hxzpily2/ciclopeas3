<?xml version="1.0" encoding="utf-8"?>
<!---
<b>Availability:</b> CICLOPE AS3 Classes - www.ciclope.art.br<br>
<b>License:</b> GNU LGPL version 3<br><br>
WindowConfirm creates a window to ask for user confirmation before proceeding an action.
@author Lucas Junqueira - lucas@ciclope.art.br
-->
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()"
				width="450" title="">
	<fx:Declarations>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
		
		// FLASH PACKAGES
		import mx.managers.PopUpManager;
		import mx.core.FlexGlobals;
		
		// CICLOPE CLASSES
		import art.ciclope.managanaeditor.*;
		
		
		// VARIABLES
		
		private var _response:Function;	// a function to call after the user selection. Must receive one boolean parameter (true if the user confirmed the action, false otherwise) and one string (the text entry).
		private var _title:String;		// window title
		private var _message:String;	// window message
		
		/**
		 * Component initialize.
		 */
		private function init():void {
			this.closeButton.visible = false;
		}
		
		// PUBLIC METHODS
		
		/**
		 * Set window content.
		 * @param	title	the window title
		 * @param	message	the window message
		 * @param	response	a function to call after the user selection. Must receive one boolean parameter (true if the user confirmed the action, false otherwise) and one string (the text entry).
		 */
		public function setContent(title:String, message:String, response:Function = null):void {
			if (this.title != null) this.title = title;
			if (this.theMessage != null) this.theMessage.text = message;
			this._title = title;
			this._message = message;
			this._response = response;
		}
		
		// PRIVATE METHODS
		
		/**
		 * A component is ready.
		 * @param	name	the component name
		 */
		private function onReady(name:String):void {
			switch (name) {
				case 'theMessage':
					this.theMessage.text = this._message;
					break;
				case 'theInput':
					this.theInput.setFocus();
					break;
			}
		}
		
		/**
		 * Action confirmed.
		 */
		private function onOk():void {
			if (this._response != null) this._response(true, this.theInput.text);
			PopUpManager.removePopUp(this);
			this._title = null;
			this._message = null;
			this._response = null;
		}
		
		/**
		 * Exit window.
		 */
		private function onCancel():void {
			if (this._response != null) this._response(false, "");
			PopUpManager.removePopUp(this);
			this._title = null;
			this._message = null;
			this._response = null;
		}
		
		]]>
	</fx:Script>
	
	<s:VGroup x="0" y="0" width="100%" height="100%" styleName="paddingGroup">
		<s:Label id="theMessage" width="100%" creationComplete="onReady('theMessage')" />
		<s:TextInput id="theInput" width="100%" creationComplete="onReady('theInput')" />
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right">
			<s:Button label="{resourceManager.getString('language', 'REQTEXT_CANCEL')}" click="onCancel()" />
			<s:Button label="{resourceManager.getString('language', 'REQTEXT_CONFIRM')}" click="onOk()" />
		</s:HGroup>
	</s:VGroup>
</s:TitleWindow>